name: secret santa

on:
    workflow_call:
     inputs:
      image_name: 
        required: true
        type: string
      tag: 
        type: string
      
     secrets:
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true

jobs:
  do-it:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Run a one-line script
        run: echo Hello, world!

      - name: copy template file from sturdy-sniffle  repo
        run: |
          git clone https://${{ secrets.GH_TOKEN }}@github.com/umangcypher-BH/sturdy-sniffle.git
      - name: copy the docker file to template directory
        run: |
          cp ${{ inputs.docker_file_path }}./sturdy-sniffle/Dockerfile ./sturdy-sniffle/configs   
      - name: Install Trivy CLI
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.31.3
 
      - name: downloading  vulnerability  database
        run: |
          /usr/local/bin/trivy image --download-db-only  
     
      - name: Run Trivy  scan for Docker Image and generate html report
        run: |
          /usr/local/bin/trivy image --format template --template "@./sturdy-sniffle/html.tpl" --ignorefile "./sturdy-sniffle/.trivyignore" -o Report.html ${{ inputs.GHCR_REPO }}${{ inputs.IMAGE_NAME }}
      
      - name: Run Trivy scan for filesystem and generate html report(Trivy will look for vulnerabilities based on lock files such as Gemfile.lock and package-lock.json)
        run: |
          /usr/local/bin/trivy -q fs . --format template --template "@./sturdy-sniffle/html.tpl" --ignorefile "./sturdy-sniffle/.trivyignore" -o Report2.html ${{ inputs.Packages_lock }}
      
      - name: Run Trivy scan for dockerfile 
        run: |
          /usr/local/bin/trivy conf --policy ./sturdy-sniffle/policies --format template --template "@./sturdy-sniffle/html.tpl" -o Report3.html  --namespaces user ./sturdy-sniffle/configs
        
      - name: Append all reports to Report.html
        run: |
          cat Report3.html >> Report2.html;cat Report2.html >> Report.html
      - name: Upload Trivy vulnerabilities Report to artifact
        uses: actions/upload-artifact@v3
        with:
          path: "Report.html"  
#      #  Send Trivy report from self-hosted runner
#      - name: Send Report in mail
#        uses: dawidd6/action-send-mail@v3
#        with:
#          server_address: smtphosthou.bakerhughes.com
#          server_port: 25
#          secure: none
#          username: ${{secrets.Trivy_MAIL_USERNAME}}
#          password: ${{secrets.Trivy_MAIL_PASSWORD}}
#          subject: Trivy Scan Report Github Actions job result
#          to: 'anil.kumar3@bakerhughes.com'
#          cc: 'anil.kumar3@bakerhughes.com'
#          from: svc-checkmarx <svc-checkmarx@bakerhughes.com>
#          body: "Build job of ${{github.repository}} completed successfully!"
#          ignore_cert: true
#          convert_markdown: true
#          reply_to: svc-checkmarx@bakerhughes.com
#          in_reply_to: svc-checkmarx@bakerhughes.com
#          attachments: ./Report.html

      - name: check for Crtical & High vulnerabilities in Docker Image
        run: |
          /usr/local/bin/trivy image --no-progress --exit-code 1 --severity CRITICAL,HIGH --ignore-unfixed --ignorefile "./sturdy-sniffle/.trivyignore" ${{ inputs.GHCR_REPO }}${{ inputs.image_name }}
     
      - name: Check for filesystem (Trivy will look for vulnerabilities based on lock files such as Gemfile.lock and package-lock.json)
        run: |
          /usr/local/bin/trivy -q fs . --exit-code 1 --severity CRITICAL,HIGH --ignore-unfixed --ignorefile "./sturdy-sniffle/.trivyignore"  ${{ inputs.Packages_lock }}      
      - name: check for Misconfig in Dockerfile (Optional)
        run: |
          /usr/local/bin/trivy conf --exit-code 1 --severity CRITICAL --policy ./sturdy-sniffle/policies  --namespaces user ./sturdy-sniffle/configs
      - name: Docker Login
        uses: docker/login-action@v2
        with:          
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: umangcypherbh/trviyscan2demo
